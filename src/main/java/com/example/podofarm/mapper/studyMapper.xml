<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="study">

    <insert id = "createStudy">
        INSERT INTO STUDY (S_NO, ID, S_CODE, S_NAME, S_START, S_END, S_PASSWORD)
        VALUES (STUDYNO_SEQ.NEXTVAL, #{id}, #{s_code}, #{s_name}, #{s_start}, #{s_end}, #{s_password})
    </insert>

    <update id = "updateStudyLeader">
        UPDATE USERS SET STUDY = 1, LEADER = 1 WHERE ID = #{id}
    </update>

    <select id = "checkStudyCode" resultType = "java.lang.String">
        SELECT S_CODE FROM STUDY WHERE ID = #{id}
    </select>


    <!-- 스터디 코드 확인-->
    <select id="findStudyCode"  resultType="java.lang.String">
        select DISTINCT s_code from STUDY where s_code = #{s_code}
    </select>


    <!-- 메인페이지 스터디 데이터 값 -->
    <!-- 스터디 명 -->
    <select id = "getStudyName" resultType="java.lang.String">
        select DISTINCT s_name from study where s_code = #{s_code}
    </select>
    <!-- 스터디 인원 -->
    <select id = "getTotalMember" resultType ="java.lang.Integer">
        select count(*) from study where s_code = #{s_code}
    </select>
    <!-- 스터디 남은 일 수 -->
    <select id = "getDday" resultType ="java.lang.Integer">
        SELECT
        DISTINCT (s_end - SYSDATE) AS d_day
        FROM
        study
        WHERE s_code = #{s_code}
    </select>

    <!--스터디 멤버 이름 -->
    <select id ="getStudyMemberByMonth" resultType = "java.lang.String" parameterType="java.lang.String">
        SELECT u.name
        FROM users u
        JOIN study s ON u.id = s.id
        WHERE s.s_code = #{s_code}
        AND TO_DATE(CONCAT(#{s_start}, '-31'), 'YYYY-MM-DD') between s.s_start and s.s_end
    </select>

    <select id ="getStudyMember" resultType = "java.lang.String" parameterType="java.lang.String">
        SELECT u.name
        FROM users u
        JOIN study s ON u.id = s.id
        WHERE s.s_code = #{s_code}
    </select>

    <select id ="getStudyMemberId" resultType="java.lang.String" parameterType="java.lang.String">
        SELECT u.id
        FROM users u
        JOIN study s ON u.id = s.id
        WHERE s.s_code = #{s_code}
    </select>

    <select id ="getStudyMemberIdByMonth" resultType = "java.lang.String" parameterType="java.lang.String">
        SELECT u.id
        FROM users u
        JOIN study s ON u.id = s.id
        WHERE s.s_code = #{s_code}
        AND #{s_start} BETWEEN TO_CHAR(s.s_start, 'YYYY-MM') AND TO_CHAR(s.s_end, 'YYYY-MM')
    </select>
    <!-- 익스텐션 -->
    <select id = "getStudyCode" resultType="java.lang.String">
        select s_code from study where id = #{id}
    </select>

    <!-- 최근활동 업데이트 -->
    <select id="getRecentActivity" resultType="map">
        <![CDATA[
        SELECT
            c.c_filename,
            c.c_problemid,
            u.name,
            CASE
                WHEN (SYSDATE - c.c_Date) * 24 * 60 * 60 < 60 THEN 'few seconds ago'
                WHEN (SYSDATE - c.c_Date) * 24 >= 1 THEN TO_CHAR(TRUNC((SYSDATE - c.c_Date) * 24), 'FM90') || ' hours ago'
                ELSE TO_CHAR(TRUNC((SYSDATE - c.c_Date) * 24 * 60), 'FM90') || ' minutes ago'

            END AS time_ago
        FROM
            code c
        JOIN
            users u ON c.id = u.id
        JOIN
            study s ON c.id = s.id
        WHERE
            c.c_Date BETWEEN TRUNC(SYSDATE) AND TRUNC(SYSDATE) + 1
            AND s_code = #{s_code}
        ORDER BY
            c.c_Date DESC
        ]]>
    </select>


    <select id = "getSolvedRank" resultType="map">
        SELECT
        u.NAME,
        COUNT(c.C_NO) AS C_NO_COUNT
        FROM
        STUDY s
        JOIN
        USERS u ON s.ID = u.ID
        LEFT JOIN
        CODE c ON s.ID = c.ID
        WHERE
        s.s_code = #{s_code}
        GROUP BY
        u.NAME
        ORDER BY
        C_NO_COUNT DESC
    </select>

    <select id ="getStartDay" resultType="java.lang.String">
        SELECT DISTINCT TO_CHAR(MIN(s_start), 'YYYY-MM') AS year_month
        FROM study
        WHERE s_code = #{s_code}
    </select>
</mapper>